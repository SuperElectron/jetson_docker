<plugin>
  <name>mxf</name>
  <description>MXF plugin library</description>
  <filename>../../gst/mxf/.libs/libgstmxf.so</filename>
  <basename>libgstmxf.so</basename>
  <version>1.14.5</version>
  <license>LGPL</license>
  <source>gst-plugins-bad</source>
  <package>GStreamer Bad Plug-ins source release</package>
  <origin>Unknown package origin</origin>
  <elements>
    <element>
      <name>mxfdemux</name>
      <longname>MXF Demuxer</longname>
      <class>Codec/Demuxer</class>
      <description>Demux MXF files</description>
      <author>Sebastian Dröge &lt;sebastian.droege@collabora.co.uk&gt;</author>
      <pads>
        <caps>
          <name>sink</name>
          <direction>sink</direction>
          <presence>always</presence>
          <details>application/mxf</details>
        </caps>
        <caps>
          <name>track_%u</name>
          <direction>source</direction>
          <presence>sometimes</presence>
          <details>ANY</details>
        </caps>
      </pads>
    </element>
    <element>
      <name>mxfmux</name>
      <longname>MXF muxer</longname>
      <class>Codec/Muxer</class>
      <description>Muxes video/audio streams into a MXF stream</description>
      <author>Sebastian Dröge &lt;sebastian.droege@collabora.co.uk&gt;</author>
      <pads>
        <caps>
          <name>alaw_audio_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>audio/x-alaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</details>
        </caps>
        <caps>
          <name>bwf_audio_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>audio/x-raw, format=(string)S32LE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)S32BE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)S24LE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)S24BE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)S16LE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)S16BE, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw, format=(string)U8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</details>
        </caps>
        <caps>
          <name>dv_dif_video_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>video/x-dv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)true</details>
        </caps>
        <caps>
          <name>jpeg2000_video_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>image/x-jpc, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], colorspace=(string){ sRGB, sYUV }</details>
        </caps>
        <caps>
          <name>mpeg_audio_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ], rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ], parsed=(boolean)true; audio/x-ac3, rate=(int)[ 4000, 96000 ], channels=(int)[ 1, 6 ]; audio/mpeg, mpegversion=(int)2, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 8 ]</details>
        </caps>
        <caps>
          <name>mpeg_video_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>video/mpeg, mpegversion=(int){ 1, 2, 4 }, systemstream=(boolean)false, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-h264, stream-format=(string)byte-stream, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</details>
        </caps>
        <caps>
          <name>up_video_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>video/x-raw, format=(string)RGB, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)BGR, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)RGBx, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)xRGB, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)BGRx, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)xBGR, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)ARGB, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)RGBA, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)ABGR, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)BGRA, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)v308, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)UYVY, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw, format=(string)YUY2, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</details>
        </caps>
        <caps>
          <name>vc3_video_sink_%u</name>
          <direction>sink</direction>
          <presence>request</presence>
          <details>video/x-dnxhd, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</details>
        </caps>
        <caps>
          <name>src</name>
          <direction>source</direction>
          <presence>always</presence>
          <details>application/mxf</details>
        </caps>
      </pads>
    </element>
  </elements>
</plugin>